plugins {
    id 'org.springframework.boot' version '2.6.15'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
    id 'com.gorylenko.gradle-git-properties' version '2.4.1'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

java {
    group = 'com.jojoldu.spring'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = 11
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

apply plugin: "io.spring.dependency-management"

dependencies {
    implementation 'org.springframework:spring-web' // For RestTemplate

    implementation('org.springframework.boot:spring-boot-starter-batch')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')
    implementation('org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16')
    implementation('mysql:mysql-connector-java')
    implementation 'org.mariadb.jdbc:mariadb-java-client'

    implementation "com.querydsl:querydsl-jpa:5.0.0"
    implementation "com.querydsl:querydsl-core:5.0.0"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    implementation 'com.querydsl:querydsl-sql-spring:5.0.0'
    implementation 'joda-time:joda-time:2.12.5' // for querydsl-sql


    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.batch:spring-batch-test')
}

test {
    useJUnitPlatform()
}

configurations {
    querydsl.extendsFrom compileClasspath
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

// querydsl 적용
def generated = "$buildDir/generated"
querydsl {
    jpa = true
    querydslSourcesDir = generated
}
sourceSets {
    main.java.srcDir generated
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
    dependsOn clean
}
